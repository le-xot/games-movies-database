datasource db {
  provider = "postgresql"
  url      = env("DATASOURCE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// ----- User -----

model User {
  id              String   @id @unique
  login           String   @unique
  role            UserRole @default(USER)
  profileImageUrl String
  color           String   @default("#333333")
  createdAt       DateTime @default(now())

  record Record[]
  likes  Like[]   @relation("UserLikes")

  @@index([id, login])
  @@map("users")
}

enum UserRole {
  USER
  ADMIN
}

// ----- Record -----

model Record {
  id        Int    @id @default(autoincrement())
  title     String
  link      String
  posterUrl String

  status  RecordStatus? @default(QUEUE)
  type    RecordType?   @default(WRITTEN)
  genre   RecordGenre?
  grade   RecordGrade?
  episode String?

  user   User?   @relation(fields: [userId], references: [id])
  userId String?

  createdAt DateTime @default(now())

  AuctionsHistory AuctionsHistory[]
  likes           Like[]            @relation("RecordLikes")

  @@index([title])
  @@map("records")
}

enum RecordStatus {
  QUEUE
  PROGRESS
  DROP
  NOTINTERESTED
  UNFINISHED
  DONE
}

enum RecordType {
  WRITTEN
  SUGGESTION
  AUCTION
  ORDER
}

enum RecordGenre {
  GAME
  MOVIE
  ANIME
  CARTOON
  SERIES
}

enum RecordGrade {
  DISLIKE
  BEER
  LIKE
  RECOMMEND
}

// ----- Like -----

model Like {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id], name: "UserLikes")
  userId    String
  record    Record   @relation(fields: [recordId], references: [id], name: "RecordLikes")
  recordId  Int
  createdAt DateTime @default(now())

  @@unique([userId, recordId])
  @@map("likes")
}

// ----- AuctionsHistory -----

model AuctionsHistory {
  id        Int      @id @default(autoincrement())
  winner    Record   @relation(fields: [winnerId], references: [id])
  winnerId  Int
  createdAt DateTime @default(now())

  @@map("auctions_history")
}

// ----- Limit -----

model Limit {
  name     LimitType @unique
  quantity Int       @default(5)

  @@map("limits")
}

enum LimitType {
  SUGGESTION
}

// ----- SuggestionRules -----

model SuggestionRules {
  genre      RecordGenre @unique
  permission Boolean     @default(true)

  @@map("suggestion_rules")
}

// ----- ThirdPartyOauthServiceToken -----

model ThirdPartyOauthServiceToken {
  id           Int              @id @default(autoincrement())
  service      ThirdPartService @unique
  accessToken  String
  refreshToken String
  obtainedAt   DateTime         @default(now())
  expiresAt    DateTime

  @@map("third_part_oauth_service_tokens")
}

enum ThirdPartService {
  SPOTIFY
}
